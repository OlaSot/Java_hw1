public class Main {
    public static void main(String[] args) {
        System.out.println("Hello world!");

        int a = 1000; // -2,147,483,648 to 2,147,483,647
        System.out.println(a);

        long b = 10000000; // -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807

        System.out.println();

        System.out.print(a + " " + b);

        double c = 15.4; // хранит число с плавающей точкой от ±4.9*10-324 до ±1.7976931348623157*10308 и занимает 8 байт

        float d = 13.4f; // хранит число с плавающей точкой от -3.4*1038 до 3.4*1038 и занимает 4 байта

        char e = 'a'; // single character

        boolean f = true;

        short g = 11214; // -32,768 to 32,767

        byte h = 12; // -128 to 127





        System.out.printf("%d, %d, %2.3f, %2.3f, %b, %b, %d, %d", a, b, c, d, e, f, g, h); // Форматированный вывод.



    }
}

/*
 * План занятия:
 * 1) Знакомство с примитивными типами
 * 2) Знакомство с операторами вывода
 */

/*
 * Заметки
 * Имя файла должно соответствовать имени класса
 * {} указывают зону видимости.
 * В Java есть два вида переменных примитивные и ссылочные
 * Стандарт IEEE 754 - стандарт для выделения памяти на численные типы,
 * предусматривающий выделение 32, 64 и 80 бит на
 * целые и вещественные числа.
 * Для вычислений с большим объемом памяти в Java существуют специальные классы.
 * + - перегруженный оператор в Java, дает возможность выводить несколько
 * значений на консоль в одном операторе
 * По конвенции Java в строке не должно быть более 80 символов, поэтому длинные
 * строки принято переносить
 */

/*
 * Теория
 * Метод main - точка входа в java, т.е. отсюда начинается исполнение программы.
 * Примитивные типы
 * В Java их 8
 *
 * Типы для целых чисел: https://skillbox.ru/media/base/tipy-dannykh-v-java/
 * long - 64 бита
 * int - 32 бита
 * short - 16 бит
 * byte - 8 бит
 * Типы для вещественных чисел(дробных):
 * double - 64
 * float - 32
 * Символьный тип:
 * char - 32 бита
 * Логический тип:
 * boolean - 1 бит
 *
 * Для вывода информации в Java существует специальный класс System.
 * Запомним такую конструкциюЖ
 * System.out. далее интересующий нас оператор
 * System.out.print() - выводит последовательно в одну строку
 * System.out.println() - Вывести и перейти на новую строку
 * int a - декларация;
 * a = 1000 - инициализация;
 * " " - строка
 * '' - символ
 * \n - новая строка(new), переводит вывод на новую строку
 * System.out.printf("", ) - форматированный вывод, т.е. в кавычках указывается
 * тип числа и количество позиций для
 * его вывода
 */






